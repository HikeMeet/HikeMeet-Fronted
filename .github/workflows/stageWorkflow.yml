name: Expo React Native CI with Node.js Backend

on:
  push:
    branches:
      - main
      - woozai-patch-1
      - feature/interactive-map-page2-include-test
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout frontend repo
      - name: Checkout frontend
        uses: actions/checkout@v4

      # Step 2: Clone backend repo
      - name: Clone backend repo
        run: git clone https://github.com/HikeMeet/HikeMeet-Backend.git temp-backend

      # Step 3: Start backend and frontend using Docker Compose
      - name: Start backend and frontend using Docker Compose
        run: docker compose -f docker-compose.yml up -d --build

      # Step 4: Debug - Print backend logs to see status
      - name: Show backend logs (for debugging)
        run: docker logs hike-backend || echo "No logs available"

      # Step 5: Debug - Try curl directly and show full response
      - name: Try calling backend API (debug)
        run: |
          echo "Testing backend API directly:"
          curl -v http://backend:3000/api || echo "Backend not responding"

      # Step 6: Wait until backend is ready (HTTP 200 response)
      - name: Wait for backend to return 200
        run: |
          echo "Waiting for backend to respond with 200..."
          timeout 90 bash -c '
          until [ "$(curl -s -o /dev/null -w "%{http_code}" http://backend:3000/api)" == "200" ]; do
            sleep 2
            echo "Still waiting..."
          done
          '
          echo "Backend is up and responding!"

      # Step 7: Setup Node.js to run frontend tests
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      # Step 8: Install frontend dependencies (outside container)
      - name: Install frontend dependencies
        run: npm install

      # Step 9: Run frontend tests
      - name: Run frontend tests
        run: npm run test
