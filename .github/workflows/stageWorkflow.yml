#
name: Expo React Native CI with Node.js Backend

on:
  push:
    branches:
      - main
      - woozai-patch-1
      - feature/interactive-map-page2-include-test #need to be change
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Frontend Repo
        uses: actions/checkout@v4

      - name: Clone Backend Repo
        run: git clone https://github.com/HikeMeet/HikeMeet-Backend.git ../hikemeet-backend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Export backend secrets
        run: |
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.backend
          echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env.backend
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env.backend
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env.backend
          echo "FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}" >> .env.backend
          echo "FIREBASE_AUTH_URI=${{ secrets.FIREBASE_AUTH_URI }}" >> .env.backend
          echo "FIREBASE_TOKEN_URI=${{ secrets.FIREBASE_TOKEN_URI }}" >> .env.backend
          echo "FIREBASE_AUTH_PROVIDER_CERT_URL=${{ secrets.FIREBASE_AUTH_PROVIDER_CERT_URL }}" >> .env.backend
          echo "FIREBASE_CLIENT_CERT_URL=${{ secrets.FIREBASE_CLIENT_CERT_URL }}" >> .env.backend
          echo "FIREBASE_TYPE=${{ secrets.FIREBASE_TYPE }}" >> .env.backend
          echo "FIREBASE_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}" >> .env.backend
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env.backend
          echo "PORT=${{ secrets.PORT }}" >> .env.backend
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env.backend
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env.backend
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env.backend
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env.backend

      - name: Export frontend secrets
        run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "EXPO_LOCAL_SERVER=http://backend:3000" >> .env
          echo "MAPBOX_TOKEN=${{ secrets.MAPBOX_TOKEN }}" >> .env
          echo "MAPBOX_TOKEN_PUBLIC=${{ secrets.MAPBOX_TOKEN_PUBLIC }}" >> .env
          echo "GOOGLEMAP_API_KEKY=${{ secrets.GOOGLEMAP_API_KEKY }}" >> .env

      - name: Build and Start Containers
        run: docker compose -f docker-compose.yml up -d --build

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend..."
          for i in {1..30}; do
            if curl -s http://localhost:5000/api | grep -q "Server is working"; then
              echo "✅ Backend is up!"
              exit 0
            fi
            echo "⏳ Waiting for backend... ($i)"
            sleep 2
          done
          echo "❌ Backend did not respond in time"
          docker logs hikemeet-backend || true
          exit 1

      - name: Run Frontend Tests
        run: docker exec hikemeet-frontend npm test
