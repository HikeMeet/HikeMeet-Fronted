name: Expo React Native CI with Backend in Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: stage

    steps:
      - uses: actions/checkout@v4

      - name: Clone Backend Repo
        run: git clone https://github.com/HikeMeet/HikeMeet-Backend.git backend

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          cache: npm

      - name: Write backend .env file
        working-directory: backend
        run: |
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "EXPO_LOCAL_SERVER=http://localhost:3000" >> .env.local
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.local
          echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env.local
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env.local
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env.local
          echo "FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}" >> .env.local
          echo "FIREBASE_AUTH_URI=${{ secrets.FIREBASE_AUTH_URI }}" >> .env.local
          echo "FIREBASE_TOKEN_URI=${{ secrets.FIREBASE_TOKEN_URI }}" >> .env.local
          echo "FIREBASE_AUTH_PROVIDER_CERT_URL=${{ secrets.FIREBASE_AUTH_PROVIDER_CERT_URL }}" >> .env.local
          echo "FIREBASE_CLIENT_CERT_URL=${{ secrets.FIREBASE_CLIENT_CERT_URL }}" >> .env.local
          echo "FIREBASE_TYPE=${{ secrets.FIREBASE_TYPE }}" >> .env.local
          echo "FIREBASE_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}" >> .env.local
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env.local
          echo "PORT=3000" >> .env.local
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env.local
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env.local
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env.local

      - name: Build Backend Docker Image
        working-directory: backend
        run: docker build -t hike-meet-backend:test .

      - name: Run Backend Container
        run: |
          docker run -d \
            --name backend \
            --env-file=backend/.env.local \
            -p 3000:3000 \
            hike-meet-backend:test

      # ✅ Debug container state working
      - name: Show running containers
        run: docker ps -a

      # ✅ Print backend logs
      - name: Print backend logs
        run: docker logs backend

      - name: Curl /api for Health Check
        run: curl -v http://localhost:3000/api

      # ✅ Wait for backend
      - name: Wait for Backend
        run: |
          echo "⏳ Waiting for backend to respond on /api..."
          for i in {1..15}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api)
            if [ "$status" = "200" ]; then
              echo "✅ Backend is up!"
              exit 0
            fi
            echo "❌ Not ready (HTTP $status), retrying in 3s..."
            sleep 3
          done
          echo "❌ Backend did not respond in time"
          exit 1

      - name: Set Frontend API URL
        run: echo "EXPO_LOCAL_SERVER=http://localhost:3000" >> $GITHUB_ENV

      - name: Install Frontend Deps
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: Run Linter
        run: npm run lint -- --ignore-pattern backend/
